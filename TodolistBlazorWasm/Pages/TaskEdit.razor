@page "/taskEdit/{TaskID}"
@using TodolistBlazor.Models.DTOs;
@using TodolistBlazor.Models.Enums;
@using TodolistBlazorWasm.Services;
@using TodolistBlazorWasm.Components;

@inject ITaskAPIClient TaskAPIClient;
@inject NavigationManager NavigationManager;
@inject IToastService ToastService;

@if (Task == null)
{
    <LoadingIndicator></LoadingIndicator>
}
else
{
    <h3>Task Edit: @Task.Name</h3>

    <EditForm Model="Task" OnValidSubmit="@SubmitTask">
        <DataAnnotationsValidator /> @*Phải có thẻ này mới dùng được validation*@
        <div class="form-group">
            <label for="Name">Name</label>
            <InputText class="form-control" @bind-Value="Task.Name" placeholder="Name"></InputText>
            <ValidationMessage For="()=>Task.Name"></ValidationMessage>
            <small id="nameHelp" class="form-text text-muted">Please enter the task title here.</small>
        </div>
        <div class="form-group">
            <label for="Priority">Priority</label>
            <InputSelect class="form-control" @bind-Value="Task.Priority">
                <option>Select an priority</option>
                @foreach (string item in Enum.GetNames(typeof(Priority)))
                    {
                    <option value="@item">@item</option>
                    }
            </InputSelect>
            <ValidationMessage For="()=>Task.Priority"></ValidationMessage>
            <small id="nameHelp" class="form-text text-muted">Choose a priority which you want.</small>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}


@code {
    [Parameter]
    public string TaskID { get; set; }

    private TaskUpdateRequest Task;

    protected async override Task OnInitializedAsync()
    {
        var taskDTO = await TaskAPIClient.GetTaskDetail(TaskID);
        Task = new TaskUpdateRequest();
        Task.Name = taskDTO.Name;
        Task.Priority = taskDTO.Priority;
    }

    private async Task SubmitTask(EditContext context)
    {
        var result = await TaskAPIClient.UpdateTask(Guid.Parse(TaskID), Task);
        if (result)
        {

            ToastService.ShowSuccess($"{Task.Name} has been updated successfully.", "Success");
            NavigationManager.NavigateTo("/Todolist");
        }
        else
        {
            ToastService.ShowError($"An error occurred in progress. Please contact to administrator.", "Error");
        }
    }
}
